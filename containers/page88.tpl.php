<?php // BEGIN PHP
$websitekey=basename(__DIR__); if (empty($websitepagefile)) $websitepagefile=__FILE__;
if (! defined('USEDOLIBARRSERVER') && ! defined('USEDOLIBARREDITOR')) {
	$pathdepth = count(explode('/', $_SERVER['SCRIPT_NAME'])) - 2;
	require_once ($pathdepth ? str_repeat('../', $pathdepth) : './').'master.inc.php';
} // Not already loaded
require_once DOL_DOCUMENT_ROOT.'/core/lib/website.lib.php';
require_once DOL_DOCUMENT_ROOT.'/core/website.inc.php';
ob_start();
// END PHP ?>
<html lang="en">
<head>
<title>panier</title>
<meta charset="utf-8">
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<meta name="robots" content="index, follow" />
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="keywords" content="" />
<meta name="title" content="panier" />
<meta name="description" content="panier" />
<meta name="generator" content="Dolibarr 19.0.2 (https://www.dolibarr.org)" />
<meta name="dolibarr:pageid" content="88" />
<?php if ($website->use_manifest) { print '<link rel="manifest" href="/manifest.json.php" />'."\n"; } ?>
<!-- Include link to CSS file -->
<link rel="stylesheet" href="/styles.css.php?website=<?php echo $websitekey; ?>" type="text/css" />
<!-- Include link to JS file -->
<script nonce="37f0a5c4" async src="/javascript.js.php?website=<?php echo $websitekey; ?>"></script>
<!-- Include HTML header from common file -->
<?php if (file_exists(DOL_DATA_ROOT."/website/".$websitekey."/htmlheader.html")) include DOL_DATA_ROOT."/website/".$websitekey."/htmlheader.html"; ?>
<!-- Include HTML header from page header block -->

</head>
<!-- File generated by Dolibarr website module editor -->
<body id="bodywebsite" class="bodywebsite bodywebpage-panier">
<?php
// Inclure les fichiers nécessaires et démarrer la session
$main_inc_path = $_SERVER['DOCUMENT_ROOT'] . '/main.inc.php';
require_once $main_inc_path;
session_start();

// Vérifier la connexion de l'utilisateur
if (!isset($_SESSION['valid'])) {
    include 'login.php';
    exit;
}

// Obtenir l'ID de l'utilisateur
$user_id = $_SESSION['id'];

// Initialiser le panier pour cet utilisateur s'il n'existe pas encore
if (!isset($_SESSION['panier'][$user_id])) {
    $_SESSION['panier'][$user_id] = [];
}

// Gérer la suppression d'un produit du panier
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['remove_product_id'])) {
    $remove_product_id = intval($_POST['remove_product_id']);
    foreach ($_SESSION['panier'][$user_id] as $key => $item) {
        if ($item['id'] === $remove_product_id) {
            unset($_SESSION['panier'][$user_id][$key]);
            // Réindexer le tableau pour éviter les trous dans les indices
            $_SESSION['panier'][$user_id] = array_values($_SESSION['panier'][$user_id]);
            break;
        }
    }
}

// Vérifier si le product_id est passé en paramètre et est un entier valide
if (isset($_GET['product_id']) && is_numeric($_GET['product_id'])) {
    $product_id = intval($_GET['product_id']);
    
    // Récupérer les détails du produit depuis la base de données
    $sql = "SELECT * FROM " . MAIN_DB_PREFIX . "product WHERE rowid = " . $product_id;
    $result = $db->query($sql);
    
    if ($result && $db->num_rows($result) > 0) {
        $product = $db->fetch_object($result);
        
        // Ajouter ou mettre à jour le produit dans le panier de l'utilisateur (dans la session)
        $found = false;
        foreach ($_SESSION['panier'][$user_id] as &$item) {
            if ($item['id'] === $product_id) {
                // Incrémenter la quantité si le produit est déjà dans le panier
                $item['quantite'] += 1;
                $found = true;
                break;
            }
        }
        
        if (!$found) {
            // Ajouter le produit avec une quantité initiale de 1
            $_SESSION['panier'][$user_id][] = [
                'id' => $product->rowid,
                'ref' => $product->ref,
                'label' => $product->label,
                'description'=> $product->description,
                'prix' => $product->price,
                'prixttc' => $product->price_ttc,
                'tva' => $product->tva_tx,
                'quantite' => 1
            ];
        }
    }

    // Libérer le résultat de la requête
    $db->free($result);
}

// Ajout de la commande et des détails de la commande lorsque l'utilisateur clique sur "Valider la commande"
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['validate_command'])) {
    // Date actuelle avec heure, minute et seconde
    $date = date('Y-m-d H:i:s');

    // Extraire l'année et le mois actuels
    $year_month = date('y') . date('m');

    // Récupérer le dernier numéro de commande du même mois et année depuis la base de données
    $sql = "SELECT ref FROM " . MAIN_DB_PREFIX . "commande WHERE ref LIKE 'CO" . $year_month . "-%' ORDER BY ref DESC LIMIT 1";
    $result = $db->query($sql);

    if ($result && $db->num_rows($result) > 0) {
        $last_ref = $db->fetch_object($result)->ref;
        $last_num = intval(substr($last_ref, 9)); // Extraire le numéro à partir de la 10ème position
        $new_num = str_pad($last_num + 1, 4, '0', STR_PAD_LEFT); // Incrémenter et formater le numéro
    } else {
        $new_num = '0001'; // Commencer à 0001 si aucune commande n'existe
    }

    // Générer la nouvelle référence de commande
    $ref = 'CO' . $year_month . '-' . $new_num;

    // Calculer le total HT, TTC et la TVA de la commande
    $total_ht = 0;
    $total_ttc = 0;
    $total_tva = 0;
    foreach ($_SESSION['panier'][$user_id] as $item) {
        $total_ht += $item['prix'] * $item['quantite'];
        $total_ttc += $item['prixttc'] * $item['quantite'];
        $total_tva += ($item['prixttc'] - $item['prix']) * $item['quantite'];
    }

    // Insérer la commande dans la base de données Dolibarr
    $query_insert_commande = "INSERT INTO " . MAIN_DB_PREFIX . "commande (
        ref, tms, date_creation, date_valid, total_tva, date_commande, total_ht, total_ttc, fk_soc, fk_statut, fk_incoterms, fk_multicurrency, multicurrency_code, multicurrency_total_ht, multicurrency_total_tva, multicurrency_total_ttc,model_pdf,fk_input_reason) 
        VALUES (
        '$ref', '$date', '$date', '$date', $total_tva, '$date', $total_ht, $total_ttc, $user_id, 1, 0, 0, 'TND', $total_ht, $total_tva, $total_ttc,'eratosthene',12)";
    
    $result_insert = $db->query($query_insert_commande);
if ($result_insert) {
    $commande_id = $db->last_insert_id(MAIN_DB_PREFIX . 'commande');
    
    // Insérer les détails de la commande dans la base de données
    foreach ($_SESSION['panier'][$user_id] as $item) {
        $total_ht_item = $item['prix'] * $item['quantite'];
        $total_ttc_item = $item['prixttc'] * $item['quantite'];
        $total_tva_item = ($item['prixttc'] - $item['prix']) * $item['quantite'];
        $description = $item['description']; // Utilisez le champ label comme description
        
        $query_insert_commande_det = "INSERT INTO " . MAIN_DB_PREFIX . "commandedet (
            description, ref_ext, fk_commande, fk_product, qty, tva_tx, localtax1_type, localtax2_type, price, subprice, multicurrency_subprice, multicurrency_total_ht, rang, multicurrency_code, multicurrency_total_tva, multicurrency_total_ttc, total_ht, total_tva, total_ttc) 
            VALUES (
            '$description', '', $commande_id, {$item['id']}, {$item['quantite']}, {$item['tva']}, '', '', {$item['prix']}, {$item['prix']}, {$item['prix']}, $total_ht_item, 1, 'TND', $total_tva_item, $total_ttc_item, $total_ht_item, $total_tva_item, $total_ttc_item)";
        $db->query($query_insert_commande_det);
    }

    // Vider le panier après validation de la commande
    unset($_SESSION['panier'][$user_id]);
}
}

includeContainer('header');

?>


<style>
    
    
    .panier-container {
        min-height: 91vh;
        width: 100%;
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 4vh 0 4vh 0;
    }
    
    .title-sec {
        font-family: "JetBrains Mono", monospace;
        color: var(--color-third);
        text-transform: uppercase;
        letter-spacing: 2px;
        margin-bottom: 6vh !important;
        text-align: center;
    }
    
    .first-color {
        color: var(--color-first);
    }
    
    .cart-items .empty-cart {
        font-size: 26px;
        font-weight: 400;
        letter-spacing: 1px;
    } 
    
    .cart-items {
        margin-bottom: 30px;
        display: grid;
        justify-items: stretch;
        grid-template-columns:  60% 40%;;
        width: 80%;
    }
    
    .panier-left {
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        width: 100%;
        gap: 35px;
        padding-right: 10%;
    }
    
    
    
    
    
    
    
    
    /* card */
    
    .card-product {
        position: relative;
        background: #ffffff;
        display: flex;
        width: 80%;
        height: auto;
        flex-direction: row;
        padding: 8px;
        border: solid 1px var(--color-first);
        border-radius: 24px;
        box-shadow: 0 3px 6px rgb(0 0 0 / 25%);
        gap: 18px;
        transition: .3s;
        will-change: transform;

    }
    
    /*.card-product:hover {*/
    /*    transform: scale(104%) translateY(-10px);*/
    /*    box-shadow: 0 8px 10px rgb(0 0 0 / 20%);*/
    /*}*/
    
    .card-product .container-card-image {
        position: relative;
        overflow: hidden;
        /*aspect-ratio: 1 / 1;*/
        width: 45%;
        height: 100%;
        border-radius: 16px;
        margin-bottom: 12px;
    }
    
    .container-card-image img {
        object-fit: cover;
        width: 100%;
        object-position: center;
        height: 100%;
    }
     
    .container-card-details{
        margin-left: 3px;
    }
    
    .cart-items .container-card-details  p{
        font-family: "Roboto", sans-serif !important;
        font-size: 26px;
        font-weight: 500;
        color: var(--color-third);
        letter-spacing: 1px;
    }
    
    .name-product {
        margin-bottom: 10px !important;
        font-size: 28px !important;
        color: var(--color-third) !important;
        font-weight: 500 !important;
    }
    
    
    
    .line-sep {
        position: relative;
        left: -11px;
        width: 40%;
        height: 1px;
        background: var(--color-first);
        margin: 3.5% 0;
    }
    
    .sala {
        position: absolute;
        bottom: 10px;
        right: 10px;
    }
     
    .circle-deco {
        width: 40px;
        height: 40px;
        background: var(--color-first);
        z-index: 2;
        border: none;
        color: #ffffff;
        border-radius: 50% !important;
        font-weight: 900;
        font-size: 25px !important;
        display: flex;
        padding-bottom: 2px !important;
        justify-content: center;
        will-change: transform;
        transition: .2s;
    }
    
    .circle-deco:hover {
        transform: scale(120%) rotate(90deg);
    }
    
    .total-card {
        position: relative;
        width: 360px;
        display: flex;
        flex-direction: column;
        border: solid 2px var(--color-first);
        border-radius: 24px;
        box-shadow: 0 4px 6px rgb(0 0 0 / 16%);
        overflow:hidden;
        display: flex;
        flex-direction: column;
        transition: .3s;
        will-change: transform;
    }
    
    .total-card:hover {
           transform: scale(102%);
    }
    .total-card:hover .total-card-title {
        background: #4e82cf;
    }
    
    
    
    
    
    
    .panier-right {
        display: flex;
        position: relative;
        flex-direction: column;
        gap: 24px;
        width: 75%;
        align-items: center;
    }
    
    
    .total-card-title {
        position: relative;
        background: var(--color-first);
        padding: 8px 16px;
        transition: .3s;
    }
    
    .total-card h5 {
        text-align: center;
        color : #ddeaff;
    }
    
    .total-card-price {
        position: relative;
        width: 100%;
        height: 100%;
        padding: 18px;
    }
    
    .total-card-price p {
        font-family: "Roboto", sans-serif;
        font-size: 26px;
        color: var(--color-third);
        font-weight: 500;
        margin-bottom: 1.1vh;
    }
    
    .total-card-price b {
        margin-right: 14px;
        font-weight: 500;
        color: var(--color-first);
    }
    
    .total-card-price .line {
        position: relative;
        height: 1px;
        width: 35%;
        background: var(--color-first);
        right: -18px;
    }
    
    .detail-container {
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        gap: 10px;
    }
    
    .more-details {
        font-size: 20px !important;
        color: var(--color-first) !important;
        transition: .3s;
    }
    
    .more-details:hover {
        color: black;
        letter-spacing: 1px;
    }
    
    .light-ht {
        font-weight: 300 !important;
        font-size: 22px !important;
        margin-bottom: 1.4vh !important;
    }
    .light-ht b{
        font-weight: 400 !important;
    }
    
    
    .valider-com {
    text-transform: uppercase !important;
    font-size: 20px !important;
    color: var(--color-second) !important;
    border: none !important;
    padding: 10px 16px !important;
    display: flex !important;
    align-items: center;
    font-weight: 600;
    gap: 6px;
    background: var(--color-first);
    letter-spacing: 1px;
    font-family: "Roboto", sans-serif !important;
    border-radius: 16px !important;
    transition: .4s;
    will-change: transform;
    box-shadow: 0 4px 6px rgb(0, 0, 0, 25%);
    }
    .valider-com:hover {
    transform: scale(105%);
    color: var(--color-first) !important;
    background: #9ab4d1;
    }
    
    
</style>




    
<main>
    <div class="panier-container">
        
    <div>
        <h2 class="title-sec"><span class="first-color">Panier</span> d'achat</h2>
    </div>

        
        <section class="cart-items">
        
            <div class="panier-left">
            
            <?php if (isset($_SESSION['panier'][$user_id]) && count($_SESSION['panier'][$user_id]) > 0): ?>
                <?php foreach ($_SESSION['panier'][$user_id] as $item): ?>
                    <div class="card-product">
                        <div class="container-card-image"  container-card-image>
                            <img src="image/ebusinessTester1/logiciel_caisse_magasin.jpg" alt="<?php echo htmlspecialchars($item['label']); ?>">
                        </div>
                        
                        
                        <div class"container-card-details">
                            
                        <div class="item-details">
                            <p class="name-product"><?php echo htmlspecialchars($item['ref']) . " " . htmlspecialchars($item['label']); ?></p>
                            <p>Prix : <?php echo number_format($item['prix'], 3, ',', ' '); ?> TND</p>
                            <p>Prix TTC : <?php echo number_format($item['prixttc'], 3, ',', ' '); ?> TND</p>
                            <p>TVA : <?php echo number_format($item['tva'], 2, ',', ' '); ?>%</p>

                            <div class="quantity">
                                <button class="decrement">-</button>
                                <input type="number" value="<?php echo htmlspecialchars($item['quantite']); ?>" min="1">
                                <button class="increment">+</button>
                            </div>

                             <!--Formulaire pour supprimer le produit -->
                            <form method="POST" action="">
                                <input type="hidden" name="remove_product_id" value="<?php echo htmlspecialchars($item['id']); ?>">
                                <button type="submit">Supprimer</button>
                            </form>
                        </div>
                            
                    </div>
                    </div>
                <?php endforeach; ?>

                 <!--ICI-->
            <?php else: ?>
                <p class="empty-cart">Votre panier est vide.</p>
            <?php endif; ?>
            
            
            </div>
            
            
            <div class="panier-right">
                <div class="total-card">
                    <div class="total-card-title">
                        <h5>Total des commandes</h3>
                    </div>
                    <div class="total-card-price">
                        <p><b>Total TTC</b><?php echo number_format($total_ttc_sum_propal, 3, ',', ' '); ?> TND</p>
                        <p class="light-ht"><b>Total HT</b><?php echo number_format($total_ht_sum_propal, 3, ',', ' '); ?> TND</p>
                        <!--<div class="detail-container">-->
                        <!--    <div class="line"></div>-->
                        <!--    <a href="" class="more-details">Plus de détails</a>-->
                        <!--</div>-->
                    </div>
                </div>
                            <!--Formulaire pour valider la commande -->
                <form method="POST" action="">
                    <button type="submit" name="validate_command" class="checkout valider-com">Valider la commande</button>
                </form>
            </div>
            
        </section>
        
        
        
    </div>
</main>

</body>
</html>
<?php // BEGIN PHP
$tmp = ob_get_contents(); ob_end_clean(); dolWebsiteOutput($tmp, "html", 88); dolWebsiteIncrementCounter(9, "page", 88);
// END PHP ?>
